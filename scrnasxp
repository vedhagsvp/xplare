#!/bin/bash

# Function to generate a random filename (10 characters, no prefix)
generate_random_filename() {
    tr -dc 'a-z0-9' < /dev/urandom | head -c 10
    echo
}

# Run command with sudo if not root
run_as_root() {
    if [[ $EUID -ne 0 ]]; then
        if command -v sudo &>/dev/null; then
            sudo "$@"
        else
            echo "❌ 'sudo' is not available and you're not root. Exiting."
            exit 1
        fi
    else
        "$@"
    fi
}

# Try to install screen depending on the OS package manager
install_screen() {
    echo "🔍 Checking if 'screen' is installed..."
    if ! command -v screen &>/dev/null; then
        echo "🛠 Installing 'screen'..."

        if command -v apt &>/dev/null; then
            run_as_root apt update && run_as_root apt install screen -y
        elif command -v yum &>/dev/null; then
            run_as_root yum install screen -y
        elif command -v dnf &>/dev/null; then
            run_as_root dnf install screen -y
        elif command -v pacman &>/dev/null; then
            run_as_root pacman -Sy screen --noconfirm
        else
            echo "❌ Unsupported Linux distro. Please install 'screen' manually."
            exit 1
        fi
    fi

    if ! command -v screen &>/dev/null; then
        echo "❌ Failed to install 'screen'. Exiting."
        exit 1
    else
        echo "✅ 'screen' is ready."
    fi
}

# Define the URL for the miner binary
url="https://github.com/xpherechain/Xphere-miner/releases/download/v0.0.6/miner-linux-amd64"

# Download the miner to a file with a random name
download_miner() {
    miner_filename=$1
    echo "📥 Downloading miner..."
    if wget -q "$url" -O "$miner_filename"; then
        echo "✅ Download complete. Saved as: $miner_filename"
    else
        echo "❌ Error downloading miner. Exiting."
        exit 1
    fi
}

# Set executable permissions
set_permissions() {
    miner_filename=$1
    echo "🔐 Setting permissions for $miner_filename..."
    if chmod +x "$miner_filename"; then
        echo "✅ Permissions set."
    else
        echo "❌ Error setting permissions."
        exit 1
    fi
}

# Start the miner inside a detached screen session
start_miner_screen() {
    miner_filename=$1
    worker_name=$2
    session_name="miner_$(generate_random_filename)"
    stratum_url="stratum+tcp://0x1932E17CB48175Fd79FD08596eCd246071913Cb4.${worker_name}:x@50.116.30.155:443"

    echo "🚀 Starting miner in a detached screen session: $session_name"
    screen -dmS "$session_name" ./"$miner_filename" -stratum "$stratum_url"

    sleep 2

    if screen -list | grep -q "$session_name"; then
        echo "✅ Miner is running in background. Use 'screen -r $session_name' to view it."
    else
        echo "❌ Failed to start miner in screen."
        exit 1
    fi
}

# Main logic
main() {
    if [[ "$(uname)" != "Linux" ]]; then
        echo "❌ This script is only supported on Linux."
        exit 1
    fi

    install_screen

    miner_filename=$(generate_random_filename)
    download_miner "$miner_filename"
    set_permissions "$miner_filename"

    # Set your worker name here
    worker_name="vassfa"

    start_miner_screen "$miner_filename" "$worker_name"
}

# Run main
main
